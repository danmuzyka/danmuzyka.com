// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

/**
 * Custom mixins
 */

// Button-style link
@mixin button-link($bg-color, $button-font-size: $sb-font-size, $arrow: true, $button-style: "matte") {
  color: $foreground-color;
  //@include button($bg: $portfolio-color, $radius: $global-rounded);
  @include sassy-button($button-style, $border-radius: $global-rounded, $font-size: $button-font-size, $first-color: $bg-color, $text-style: inset);
  @if $arrow {
    &:after {
      content: ">";
      margin-left: 0.75em;
    }
  }
}

%skills-list {
  line-height: 1.6em;
  margin: 0 0 1em;
}
